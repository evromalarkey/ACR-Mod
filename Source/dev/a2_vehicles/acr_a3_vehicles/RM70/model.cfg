class Rotation;
class CfgSkeletons
{
	class Vehicle;
	class RM70: Vehicle
	{
		isDiscrete = 1;
		skeletonInherit = "";
		skeletonBones[] = {
			"wheel_1_1_damper_land", "",
			"wheel_1_2_damper_land", "",
			"wheel_1_3_damper_land", "",
			"wheel_1_4_damper_land", "",
			"wheel_2_1_damper_land", "",
			"wheel_2_2_damper_land", "",
			"wheel_2_3_damper_land", "",
			"wheel_2_4_damper_land", "",
			"wheel_1_1_damper", "wheel_1_1_damper_land",
			"wheel_1_2_damper", "wheel_1_2_damper_land",
			"wheel_1_3_damper", "wheel_1_3_damper_land",
			"wheel_1_4_damper", "wheel_1_4_damper_land",
			"wheel_2_1_damper", "wheel_2_1_damper_land",
			"wheel_2_2_damper", "wheel_2_2_damper_land",
			"wheel_2_3_damper", "wheel_2_3_damper_land",
			"wheel_2_4_damper", "wheel_2_4_damper_land",
			"wheel_1_1_steering", "wheel_1_1_damper",
			"wheel_1_2_steering", "wheel_1_2_damper",
			"wheel_1_3_steering", "wheel_1_3_damper",
			"wheel_1_4_steering", "wheel_1_4_damper",
			"wheel_2_1_steering", "wheel_2_1_damper",
			"wheel_2_2_steering", "wheel_2_2_damper",
			"wheel_2_3_steering", "wheel_2_3_damper",
			"wheel_2_4_steering", "wheel_2_4_damper",
			"wheel_1_1_base", "wheel_1_1_steering",
			"wheel_1_2_base", "wheel_1_2_steering",
			"wheel_1_3_base", "wheel_1_3_steering",
			"wheel_1_4_base", "wheel_1_4_steering",
			"wheel_2_1_base", "wheel_2_1_steering",
			"wheel_2_2_base", "wheel_2_2_steering",
			"wheel_2_3_base", "wheel_2_3_steering",
			"wheel_2_4_base", "wheel_2_4_steering",
			"wheel_1_1", "wheel_1_1_base",
			"wheel_1_2", "wheel_1_2_base",
			"wheel_1_1", "wheel_1_3_base",
			"wheel_1_2", "wheel_1_4_base",
			"wheel_2_1", "wheel_1_3_base",
			"wheel_2_2", "wheel_2_2_base",
			"wheel_2_3", "wheel_2_3_base",
			"wheel_2_4", "wheel_2_4_base",
			"wheel_1_1_unhide", "wheel_1_1_base",
			"wheel_1_2_unhide", "wheel_1_2_base",
			"wheel_1_3_unhide", "wheel_1_3_base",
			"wheel_1_4_unhide", "wheel_1_4_base",
			"wheel_2_1_unhide", "wheel_2_1_base",
			"wheel_2_2_unhide", "wheel_2_2_base",
			"wheel_2_3_unhide", "wheel_2_3_base",
			"wheel_2_4_unhide", "wheel_2_4_base",
			"wheel_1_1_hide", "wheel_1_1_base",
			"wheel_1_2_hide", "wheel_1_2_base",
			"wheel_1_3_hide", "wheel_1_3_base",
			"wheel_1_4_hide", "wheel_1_4_base",
			"wheel_2_1_hide", "wheel_2_1_base",
			"wheel_2_2_hide", "wheel_2_2_base",
			"wheel_2_3_hide", "wheel_2_3_base",
			"wheel_2_4_hide", "wheel_2_4_base",
			"damageHide", "",
			//"damageHide_cisla", "damageHide",
			"OtocSearchlight", "",
			//int
			"OtocSearchlightLever", "",
			"DriveWheel", "",
			"podsvit pristroju", "",
			"fuel", "",
			"rpm", "",
			"mph", "",
			"prop_1", "",
			"prop_2", "",
			"hatches", "",
			"levers", "",
			//raketomet
			"damageVez2", "OtocVez2",
			"damageHlaven2", "OtocHlaven2",
			"otocvez2", "",
			"otochlaven2", "otocvez2",
			"klika", "otochlaven2",
			"paka A", "otochlaven2",
			"paka B", "otochlaven2",
			"mala paka A", "otocvez2",
			"mala paka B", "otocvez2",
			//UK turret
			"OtocVez", "",
			"poklop_gunner", "OtocVez",
			//UK59
			"OtocHlaven", "OtocVez",
			"zasleh", "OtocHlaven",
			"ammo_belt", "OtocHlaven",
			"uzaver", "OtocHlaven",
			"magazine", "OtocHlaven"
		};
	};
};
class CfgModels
{
	class Vehicle;
	class Car: Vehicle
	{
		class Animations
		{
			class damageHide;
			class DamageHideVez;
			class DamageHideHlaven;
			// Dampers Destruct
			class wheel_1_1_Damage;
			class wheel_1_2_Damage;
			class wheel_1_3_Damage;
			class wheel_1_4_Damage;
			class wheel_2_1_Damage;
			class wheel_2_2_Damage;
			class wheel_2_3_Damage;
			class wheel_2_4_Damage;
			// animace damper smerem nahoru
			class wheel_1_1_Damper_Damage_BackAnim;
			class wheel_1_2_Damper_Damage_BackAnim;
			class wheel_1_3_Damper_Damage_BackAnim;
			class wheel_1_4_Damper_Damage_BackAnim;
			class wheel_2_1_Damper_Damage_BackAnim;
			class wheel_2_2_Damper_Damage_BackAnim;
			class wheel_2_3_Damper_Damage_BackAnim;
			class wheel_2_4_Damper_Damage_BackAnim;
//			class Steering_1_1;
		};
	};
	class RM70: Car
	{
		skeletonName="RM70";
		sectionsInherit = "Car";
		sections[]=
		{
			"zadni svetlo",
			"brzdove svetlo",
			"P svetlo",
			"L svetlo",
			"P svetlo 2",
			"L svetlo 2",
			"P svetlo 3",
			"L svetlo 3",
			"S svetlo",
			"wheel_1_1_base",
			"wheel_1_2_base",
			"wheel_1_3_base",
			"wheel_1_4_base",
			"wheel_2_1_base",
			"wheel_2_2_base",
			"wheel_2_3_base",
			"wheel_2_4_base",
			"clan",
			"podsvit pristroju",
			//"karoserie",
			"motor",
			//"zbytek",
			"palivo",
			"DriveWheel",
			"fuel",
			"rpm",
			"mph",
			"prop_1",
			"prop_2",
			"zasleh",
			"camo1",
			"camo2",
			"camo3"
		};
		class Animations: Animations
		{
			class damageHide
			{
				type="hide";
				source="damage";
				selection="damageHide";
			};

			class damagehlaven2: damageHide
			{
				selection="damagehlaven2";
			};
			class DrivingWheel
			{
				type="rotation";
				source="drivingWheel";
				selection="drivewheel";
				axis="drivewheel_axis";
				memory=0;
				minValue=-1;
				maxValue=1;
				angle0=-4;
				angle1=4;
			};
			class fuel
			{
				type="rotation";
				source="fuel";
				selection="fuel";
				axis="fuel_axis";
				memory=0;
				minValue=0.000000;
				maxValue=1.000000;
				angle0=0;
				angle1=-0.7;
			};
			class IndicatorSpeed
			{
				type="rotation";
				source="speed";
				selection="mph";
				axis="mph_axis";
				memory=0;
				maxValue=20;
				angle0=0;
				angle1=-3.8;
			};
			class IndicatorRPM
			{
				type="rotation";
				source="rpm";
				selection="rpm";
				axis="rpm_axis";
				memory=0;
				angle0=0;
				angle1=-3;
			};
			class prop_1
			{
				type="rotation";
				source="rpm";
				selection="prop_1";
				axis="prop_1_axis";
				memory=0;
				minValue=0.000000;
				maxValue=0.100000;
				angle0=0;
				angle1=-1.8;
			};
			class prop_2: prop_1
			{
				selection="prop_2";
				axis="prop_2_axis";
				minValue=0.000000;
				maxValue=0.150000;
				angle0=0;
				angle1=3.5;
			};
			class Steering_1_1
			{
				type="rotationY";
				source="drivingWheel";
				selection="wheel_1_1_steering";
				axis="wheel_1_1_steering_axis";
				memory=1;
				minValue="rad -90";
				maxValue="rad +90";
				angle0=0.900000;
				angle1=-0.900000;
			};
			class Steering_2_1: Steering_1_1 {selection="wheel_2_1_steering"; axis="wheel_2_1_steering_axis";};
			class Steering_1_2: Steering_1_1 {selection="wheel_1_2_steering"; axis="wheel_1_2_steering_axis"; angle0=0.700000; angle1=-0.700000; };
			class Steering_2_2: Steering_1_2 {selection="wheel_2_2_steering"; axis="wheel_2_2_steering_axis";};
			class Wheel_1_1_base
			{
				type="rotation";
				source="wheel";
				selection="wheel_1_1_base";
				axis="wheel_1_1_axis";
				memory=1;
				sourceAddress="loop";
				minValue=0;
				maxValue=1;
				angle0=0;
				angle1="rad -360";
			};
			class Wheel_1_2_base: Wheel_1_1_base {selection="wheel_1_2_base"; axis="wheel_1_2_axis";};
			class Wheel_1_3_base: Wheel_1_1_base {selection="wheel_1_3_base"; axis="wheel_1_3_axis";};
			class Wheel_1_4_base: Wheel_1_1_base {selection="wheel_1_4_base"; axis="wheel_1_4_axis";};
			class Wheel_2_1_base: Wheel_1_1_base {selection="wheel_2_1_base"; axis="wheel_2_1_axis"; angle1="rad 360"; };
			class Wheel_2_2_base: Wheel_2_1_base {selection="wheel_2_2_base"; axis="wheel_2_2_axis";};
			class Wheel_2_3_base: Wheel_2_1_base {selection="wheel_2_3_base"; axis="wheel_2_3_axis";};
			class Wheel_2_4_base: Wheel_2_1_base {selection="wheel_2_4_base"; axis="wheel_2_4_axis";};
			class Wheel_1_1_Damper
			{
				type="translationY";
				source="damper";
				selection="wheel_1_1_damper_land";
				axis="";
				minValue=-1;
				maxValue=1;
				memory=1;
			};
			class Wheel_1_2_Damper: Wheel_1_1_Damper {selection="wheel_1_2_damper_land";};
			class Wheel_1_3_Damper: Wheel_1_1_Damper {selection="wheel_1_3_damper_land";};
			class Wheel_1_4_Damper: Wheel_1_1_Damper {selection="wheel_1_4_damper_land";};
			class Wheel_2_1_Damper: Wheel_1_1_Damper {selection="wheel_2_1_damper_land";};
			class Wheel_2_2_Damper: Wheel_2_1_Damper {selection="wheel_2_2_damper_land";};
			class Wheel_2_3_Damper: Wheel_2_1_Damper {selection="wheel_2_3_damper_land";};
			class Wheel_2_4_Damper: Wheel_2_1_Damper {selection="wheel_2_4_damper_land";};

		//zaciatok kolies
			#define DamageOffset 0.3
			class wheel_1_1_Damage: wheel_1_1_Damage {offset1=DamageOffset;};
			class wheel_1_2_Damage: wheel_1_2_Damage {offset1=DamageOffset;};
			class wheel_1_3_Damage: wheel_1_3_Damage {offset1=DamageOffset;};
			class wheel_1_4_Damage: wheel_1_4_Damage {offset1=DamageOffset;};
			class wheel_2_1_Damage: wheel_2_1_Damage {offset1=DamageOffset;};
			class wheel_2_2_Damage: wheel_2_2_Damage {offset1=DamageOffset;};
			class wheel_2_3_Damage: wheel_2_3_Damage {offset1=DamageOffset;};
			class wheel_2_4_Damage: wheel_2_4_Damage {offset1=DamageOffset;};
			class wheel_1_1_Damper_Damage_BackAnim: wheel_1_1_Damper_Damage_BackAnim {offset1 = -1.2*DamageOffset;};
			class wheel_1_2_Damper_Damage_BackAnim: wheel_1_2_Damper_Damage_BackAnim {offset1 = -1.2*DamageOffset;};
			class wheel_1_3_Damper_Damage_BackAnim: wheel_1_3_Damper_Damage_BackAnim {offset1 = -1.2*DamageOffset;};
			class wheel_1_4_Damper_Damage_BackAnim: wheel_1_4_Damper_Damage_BackAnim {offset1 = -1.2*DamageOffset;};
			class wheel_2_1_Damper_Damage_BackAnim: wheel_2_1_Damper_Damage_BackAnim {offset1 = -1.2*DamageOffset;};
			class wheel_2_2_Damper_Damage_BackAnim: wheel_2_2_Damper_Damage_BackAnim {offset1 = -1.2*DamageOffset;};
			class wheel_2_3_Damper_Damage_BackAnim: wheel_2_3_Damper_Damage_BackAnim {offset1 = -1.2*DamageOffset;};
			class wheel_2_4_Damper_Damage_BackAnim: wheel_2_4_Damper_Damage_BackAnim {offset1 = -1.2*DamageOffset;};
		//koniec kolies


			class OtocSearchlight
			{
				type="rotationY";
				source="drivingWheel";
				selection="otocsearchlight";
				axis="osa_otocsearchlight";
				animPeriod=0;
				minValue="rad -360";
				maxValue="rad +360";
				angle0="rad +360";
				angle1="rad -360";
			};

			class Searchlight_lever: OtocSearchlight
			{
				type="rotation";
				selection="OtocSearchlightLever";
				axis="osa_OtocSearchlightLever";
				memory=1;
			};

			class MainTurret
			{
				type="rotation";
				source="mainTurret";
				selection="otocvez2";
				axis="osaveze2";
				memory=1;
				animPeriod=0;
				minValue="rad -360";
				maxValue="rad +360";
				angle0="rad +360";
				angle1="rad -360";
			};
			class MainGun
			{
				type="rotation";
				source="mainGun";
				selection="otochlaven2";
				axis="osahlavne2";
				memory=1;
				animPeriod=0;
				minValue="rad -360";
				maxValue="rad +360";
				angle0="rad -360";
				angle1="rad +360";
			};
			class MainKlika:MainGun
			{
				selection="klika";
				axis="osa klika";
				angle0="rad (-3600*5)";
				angle1="rad (+3600*5)";
			};
			class MainPakaA:MainGun
			{
				selection="Paka A";
				axis="osa Paka A";
				angle0="rad (-360)";
				angle1="rad (360)";
			};
			class MainPakaB:MainGun
			{
				selection="Paka B";
				axis="osa Paka B";
				angle0="rad (310)";
				angle1="rad (-310)";
			};
			class MainMalaPakaA:MainGun
			{
				selection="mala paka A";
				axis="osa paka mala";
				angle0="rad (-310)";
				angle1="rad (310)";
			};
			class MainMalaPakaB:MainMalaPakaA
			{
				selection="mala paka B";
				angle0="rad (-250)";
				angle1="rad (250)";
			};

			class hatches
			{
				type="rotation";
				source="rpm";
				selection="hatches";
				axis="hatches_axis";
				memory=0;
				minValue=0.000000;
				maxValue=0.200000;
				angle0=0.000000;
				angle1=1.2;
			};

			class levers: hatches
			{
				selection="levers";
				axis="osa_levers";
				angle0=0.000000;
				angle1=-0.7;
			};

// --- UK59 ------------------------------------------------------------------
/*			class HatchGunner
			{
				type="rotation";
				source="hatchGunner";
				selection="poklop_gunner";
				axis="poklop_gunner_axis";
				animPeriod=0;
				angle0=0;
				angle1="rad 100";
			};*/
			class HatchCommander
			{
				type="rotation";
				source="hatchCommander";
				selection="poklop_gunner";
				axis="poklop_gunner_axis";
				angle0=0;
				angle1="rad 95";
			};
			class otocVez
			{
				type="rotationY";
				source="otocVez";
				selection="otocVez";
				axis="osaVeze";
				memory=1;
				animPeriod=0;
				minValue="rad -360";
				maxValue="rad +360";
				angle0="rad -360";
				angle1="rad +360";
			};
			class otocHlaven: otocVez
			{
				type="rotationX";
				source="otocHlaven";
				selection="otochlaven";
				axis="osahlavne";
				minValue="rad -10";
				maxValue="rad +30";
				angle0="rad -10";
				angle1="rad +30";
			};
			class Turret_shake
			{
				type="translation";
				selection="OtocHlaven";
				axis="ammo_belt_axis";
				sourceAddress="mirror";
				source="ReloadAnim";
				memory=1;
				offset0=0;
				offset1=-0.03;
				minValue=0.0;
				maxValue=0.01;
			};
			class Turret_shake_aside: Turret_shake
			{
				axis="osaHlavne";
				offset0=0;
				offset1=-0.015;
				maxValue=0.01*1.2;
			};
			class belt_rotation	{
				type="rotation";
				source="ReloadAnim";
				selection="ammo_belt";
				axis="ammo_belt_axis";
				minValue=0;
				maxValue=1;
				angle0=0;
				angle1=-0.2;
			};

			class uzaver_open {
				type="rotation";
				source="reloadMagazine";
				selection="uzaver";
				axis="uzaver_axis";
				minValue=0.0;
				maxValue=0.1;
				angle0=0.0;
				angle1=1.570796;
			};
			class reload_magazine_release {
				type="rotation";
				source="reloadMagazine";
				selection="magazine";
				axis="magazine_axis";
				minValue=0.1;
				maxValue=0.5;
				angle0=0;
				angle1="rad 2";
			};
			class belt_rotation_hide {
				type="hide";
				source="reloadMagazine";
				sourceAddress="mirror";
				selection="ammo_belt";
				minValue=0.0;
				maxValue=0.5;
				hidevalue=0.2;
			};
			class reload_magazine_hide {
				type="hide";
				source="reloadMagazine";
				sourceAddress="mirror";
				selection="magazine";
				minValue=0.0;
				maxValue=0.5;
				hidevalue=0.25;
			};
			class uzaver_close: uzaver_open {
				minValue=0.95;
				maxValue=1.0;
				angle0=0.0;
				angle1=-1.570796;
			};
		};
	};
};
