class CfgSkeletons
{
        class sa58_skel
        {
                isDiscrete=0;
                skeletonInherit="";
                skeletonBones[]={
                        "trigger", "",
                        "magazine", "",
                        "bolt", "",
                        "safety", "",
                        "muzzleFlash", ""
                };
        };
		
		class OFP2_ManSkeleton
	{
		isDiscrete=0;
		skeletonInherit="";
		skeletonBones[]=
		{
			"Pelvis",
			"",
			"Spine",
			"Pelvis",
			"Spine1",
			"Spine",
			"Spine2",
			"Spine1",
			"Spine3",
			"Spine2",
			"Camera",
			"Pelvis",
			"weapon",
			"Spine1",
			"launcher",
			"Spine1",
			"neck",
			"Spine3",
			"neck1",
			"neck",
			"head",
			"neck1",
			"HeadCutScene",
			"head",
			"jaw",
			"head",
			"chin",
			"head",
			"jaw_rf",
			"head",
			"jaw_rm",
			"head",
			"jaw_rs",
			"head",
			"jaw_lf",
			"head",
			"jaw_lm",
			"head",
			"jaw_ls",
			"head",
			"ear_r",
			"head",
			"ear_l",
			"head",
			"lip_lc",
			"head",
			"lip_lwlb",
			"head",
			"lip_lwlf",
			"head",
			"lip_lwm",
			"head",
			"lip_lwrf",
			"head",
			"lip_lwrb",
			"head",
			"lip_rc",
			"head",
			"lip_uprb",
			"head",
			"lip_uprf",
			"head",
			"lip_upm",
			"head",
			"lip_uplf",
			"head",
			"lip_uplb",
			"head",
			"nose_tip",
			"head",
			"nose_r",
			"head",
			"nose_l",
			"head",
			"zig_lt",
			"head",
			"zig_lm",
			"head",
			"zig_lb",
			"head",
			"zig_rt",
			"head",
			"zig_rm",
			"head",
			"zig_rb",
			"head",
			"cheek_r",
			"head",
			"cheek_l",
			"head",
			"eyebrow_lb",
			"head",
			"eyebrow_lm",
			"head",
			"eyebrow_lf",
			"head",
			"corr",
			"head",
			"eyebrow_rf",
			"head",
			"eyebrow_rm",
			"head",
			"eyebrow_rb",
			"head",
			"eye_upr",
			"head",
			"eye_lwr",
			"head",
			"eye_upl",
			"head",
			"eye_lwl",
			"head",
			"cheek_rf",
			"head",
			"cheek_rm",
			"head",
			"cheek_rb",
			"head",
			"cheek_lf",
			"head",
			"cheek_lm",
			"head",
			"cheek_lb",
			"head",
			"forehead_l",
			"head",
			"forehead_m",
			"head",
			"forehead_r",
			"head",
			"l_eye",
			"head",
			"r_eye",
			"head",
			"l_pupila",
			"head",
			"r_pupila",
			"head",
			"neck_t",
			"head",
			"neck_b",
			"head",
			"neck_r",
			"head",
			"neck_l",
			"head",
			"tongue_b",
			"head",
			"tongue_m",
			"head",
			"tongue_f",
			"head",
			"LeftShoulder",
			"Spine3",
			"LeftArm",
			"LeftShoulder",
			"LeftArmRoll",
			"LeftArm",
			"LeftForeArm",
			"LeftArmRoll",
			"LeftForeArmRoll",
			"LeftForeArm",
			"LeftHand",
			"LeftForeArmRoll",
			"LeftHandRing",
			"LeftHand",
			"LeftHandRing1",
			"LeftHandRing",
			"LeftHandRing2",
			"LeftHandRing1",
			"LeftHandRing3",
			"LeftHandRing2",
			"LeftHandPinky1",
			"LeftHandRing",
			"LeftHandPinky2",
			"LeftHandPinky1",
			"LeftHandPinky3",
			"LeftHandPinky2",
			"LeftHandMiddle1",
			"LeftHand",
			"LeftHandMiddle2",
			"LeftHandMiddle1",
			"LeftHandMiddle3",
			"LeftHandMiddle2",
			"LeftHandIndex1",
			"LeftHand",
			"LeftHandIndex2",
			"LeftHandIndex1",
			"LeftHandIndex3",
			"LeftHandIndex2",
			"LeftHandThumb1",
			"LeftHand",
			"LeftHandThumb2",
			"LeftHandThumb1",
			"LeftHandThumb3",
			"LeftHandThumb2",
			"RightShoulder",
			"Spine3",
			"RightArm",
			"RightShoulder",
			"RightArmRoll",
			"RightArm",
			"RightForeArm",
			"RightArmRoll",
			"RightForeArmRoll",
			"RightForeArm",
			"RightHand",
			"RightForeArmRoll",
			"RightHandRing",
			"RightHand",
			"RightHandRing1",
			"RightHandRing",
			"RightHandRing2",
			"RightHandRing1",
			"RightHandRing3",
			"RightHandRing2",
			"RightHandPinky1",
			"RightHandRing",
			"RightHandPinky2",
			"RightHandPinky1",
			"RightHandPinky3",
			"RightHandPinky2",
			"RightHandMiddle1",
			"RightHand",
			"RightHandMiddle2",
			"RightHandMiddle1",
			"RightHandMiddle3",
			"RightHandMiddle2",
			"RightHandIndex1",
			"RightHand",
			"RightHandIndex2",
			"RightHandIndex1",
			"RightHandIndex3",
			"RightHandIndex2",
			"RightHandThumb1",
			"RightHand",
			"RightHandThumb2",
			"RightHandThumb1",
			"RightHandThumb3",
			"RightHandThumb2",
			"LeftUpLeg",
			"Pelvis",
			"LeftUpLegRoll",
			"LeftUpLeg",
			"LeftLeg",
			"LeftUpLegRoll",
			"LeftLegRoll",
			"LeftLeg",
			"LeftFoot",
			"LeftLegRoll",
			"LeftToeBase",
			"LeftFoot",
			"RightUpLeg",
			"Pelvis",
			"RightUpLegRoll",
			"RightUpLeg",
			"RightLeg",
			"RightUpLegRoll",
			"RightLegRoll",
			"RightLeg",
			"RightFoot",
			"RightLegRoll",
			"RightToeBase",
			"RightFoot"
		};
	};
};
 
class CfgModels
{
        class Default
                {
                        sections[] = {};
                };
        class Optic: Default
                {
                        sections[]={"muzzleFlash"};
                };
        class Weapon: Default
                {
                        sections[] ={"camo", "muzzleFlash", "RIS"};  
 
                        htMin = 1;              // Minimum half-cooling time (in seconds)
                        htMax = 600;            // Maximum half-cooling time (in seconds)
                        afMax = 0;              // Maximum temperature in case the model is alive (in celsius)
                        mfMax = 0;              // Maximum temperature when the model is moving (in celsius)
                        mFact = 1;              // Metabolism factor - number from interval <0, 1> (0 - metabolism has no influence, 1 - metabolism has full influence (no other temperature source will be considered)).
                        tBody = 100;            // Metabolism temperature of the model (in celsius)
                       
                        skeletonName="Weapon";
 
                        class Animations
                        {
                                class zaslehROT
                                {
                                        type="rotation";
                                        source="clockMinute";
                                        sourceAddress="loop";
                                        selection="zasleh";
                                        begin="usti hlavne";
                                        end="konec hlavne";
                                        memory=1;
                                        minValue=0.0166665;
                                        maxValue=0.016666666666666666666666666666667;
                                        angle0="rad 0";
                                        angle1="rad 360";
                                };
                                class magazine_hide
                                {
                                        type="hide";
                                        source="reloadMagazine";
                                        sourceAddress="mirror";
                                        selection="magazine";
                                        minValue=0.0;
                                        maxValue=0.4;
                                        hideValue=0.5;
                                };
                                class no_magazine
                                {
                                        type="hide";
                                        source="hasMagazine";
                                        selection="magazine";
                                        minValue=0.000000;
                                        maxValue=1.00000;
                                        hideValue=0.5;
                                        unhideValue = -1.0;
                                };                              
                        };
                };
 
        class sa58: Weapon
                {
                skeletonName="sa58_skel";
                class Animations
                {
                        class trigger
                        {
                                type="rotationZ"; //The type of animation.
                                source="reload";   //The controller that provides input.
                                selection="trigger"; //The name of the skeleton bone used.
                                axis="trigger_axis";                  //The name of the axis in the model.
                                minValue=0; //The minimum value of the motion range. i.e. The controller input when animation phase is 0.
                                maxValue="3"; //The maximum value of the motion range. i.e. The controller input when animation phase is 1.
                                angle0="0";   //The starting angle of this animation, where the animation phase is 0.
                                angle1="-3"; //The ending angle of this animation, where the animation phase is 1.
                        };
                        class bolt
                        {
                                type="translation"; // The type of animation.
                                source="reload";   // The controller that provides input.
                                selection="bolt"; // The name of the skeleton bone used.
                                axis="bolt_axis";                  // The name of the axis in the model.
                                begin="bolt_axis_begin";
                                end="bolt_axis_end";
                                minValue=0; //The minimum value of the motion range. i.e. The controller input when animation phase is 0.
                                maxValue="1"; //The maximum value of the motion range. i.e. The controller input when animation phase is 1.
                                offset0="0";
                                offset1="1";
                        };
                        class bolt_open:bolt
                        {
                                source="isEmpty";   //The controller that provides input.
                        };
                        class magazine_hide
                        {
                                type="hide";
                                source="reloadMagazine";
                                selection="magazine";
                                minValue=0.000000;
                                maxValue=1.00000;
                                hideValue=0.188;
                                unhideValue = 0.550;
                        };
                        class no_magazine
                        {
                                type="hide";
                                source="hasMagazine";
                                selection="magazine";
                                minValue=0.000000;
                                maxValue=1.00000;
                                hideValue=0.5;
                                unhideValue = -1.0;
                        };
                        class magazine_release
                        {
                                type="translation"; // The type of animation.
                                source="reloadMagazine";   // The controller that provides input.
                                selection="magazine_release"; // The name of the skeleton bone used.
                                axis="magazine_release_axis";                  // The name of the axis in the model.
                                begin="magazine_release_begin";
                                end="magazine_release_end";
                                minPhase=0; // Minimum phase of the animation.i.e. Animation phase when the controller value is 0.
                                maxPhase=.1; // Maxmimum value of the motion range.i.e. Animation phase when the controller value is 1.
                                minValue=0; //The minimum value of the motion range. i.e. The controller input when animation phase is 0.
                                maxValue="1"; //The maximum value of the motion range. i.e. The controller input when animation phase is 1.
                                offset0="0";
                                offset1="1";
                        };
                        class reload_magazine_hide {
                                type="hide";
                                source="reloadMagazine";
                                selection="magazine";
                                hidevalue="0.2";
                        };
                        class safety_mode_rot
                        {
                                type=rotationZ;
                                source=weaponMode;
                                selection="safety";
                                axis="safety_axis";
                                memory=0;
                                minValue=0;
                                maxValue=0.1;
                                angle1= (rad 90);
                                angle0= (rad -90);
                        };
                        class reload_magazine_release {
                                type="rotationZ";
                                source="reloadMagazine";
                                selection="magazine";
                                axis="magazine_axis";
                                minValue=0.1;
                                maxValue="1";
                                angle0="0";
                                angle1="rad -2";
                        };
                        class muzzleFlashROT
                        {
                                type="rotationX";
                                source="ammoRandom";      //use ammo count as phase for animation
                                sourceAddress="loop";     //loop when phase out of bounds
                                selection="muzzleFlash";  //selection we want to rotate
                                axis="";                  //no own axis - center of rotation is computed from selection
                                centerFirstVertex=true;   //use first vertex of selection as center of rotation
                                minValue=0;
                                maxValue=4;               //rotation angle will be 360/4 = 90 degrees
                                angle0="rad 0";
                                angle1="rad 360";
                        };
                };
        };
        class sa58p : sa58 {};
        class sa58ris : sa58 {};
        class sa58ris_back : sa58 {};
        class sa58v : sa58 {};
};